on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - v*
name: build
jobs:
  fourmolu:
    name: "Run fourmolu"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Set up and run fourmolu
      run: |
        nix shell nixpkgs#haskellPackages.fourmolu --command fourmolu --mode check .

  generateMatrix:
    name: "Generate matrix from cabal"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - uses: kleidukos/get-tested@0.1.7.1
        id: set-matrix
        with:
          cabal-file: "essence-of-live-coding/essence-of-live-coding.cabal"
          ubuntu: true
          version: 0.1.6.0

  build:
    runs-on: ubuntu-latest
    needs:
      - generateMatrix
      - fourmolu
    strategy:
      matrix: ${{ fromJSON(needs.generateMatrix.outputs.matrix) }}
    name: Haskell GHC ${{ matrix.ghc }} cabal
    steps:
      - uses: actions/checkout@v4
      - uses: haskell/actions/setup@v2
        id: setup-haskell-build
        with:
          ghc-version: ${{ matrix.ghc }}
      - name: update apt
        run: sudo apt update      
      - name: Install dependencies
        run: sudo apt-get install -y libxml2-utils libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev libpulse-dev libblas-dev liblapack-dev libasound2-dev wget
      - name: Cabal update
        run: cabal update
      - name: Cache Cabal build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.setup-haskell-build.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-cabal-${{ matrix.ghc }}
          restore-keys: |
            ${{ runner.os }}-cabal-${{ matrix.ghc }}
      - name: Cabal build dependencies
        run: |
          cabal build all  --enable-tests --only-dependencies
      - name: Cabal build packages
        run: |
          cabal build all --enable-tests
      - name: Cabal test
        run: |
          cabal test all --enable-tests --test-show-details=Always

  success:
    name: Successfully build and test
    needs:
      - build
    runs-on:
      - ubuntu-latest
    steps:
      - run: echo "Success"
